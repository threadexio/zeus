name: CI

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"

defaults:
  run:
    shell: bash

jobs:
  test:
    if: ${{ !startsWith(github.event.head_commit.message, '[no-ci]') }}

    name: Check & Test
    container: docker.io/archlinux:base-devel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt, clippy

      - name: Check
        run: make check

      - name: Run tests
        run: make test

  build:
    needs: ["test"]

    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, profile: release }

    name: Build ${{ matrix.job.profile }}
    container: docker.io/archlinux:base-devel
    runs-on: ubuntu-latest

    env:
      PROFILE: ${{ matrix.job.profile }}
      WORK_DIR: "/zeus"

    steps:
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal

      - name: Setup build env
        run: |
          pacman --needed --noconfirm -Sy sudo fakeroot git

          useradd -m -d /build builder
          echo 'builder ALL=(ALL:ALL) NOPASSWD: /usr/bin/pacman' > /etc/sudoers.d/builder

          mkdir -p -- \
            "${{ env.WORK_DIR }}" \
            "${{ env.WORK_DIR }}/artifacts"
          chown builder:builder -vR "${{ env.WORK_DIR }}"

          cargo install turboinstall

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build info
        id: info
        run: |
          set -e
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          rustc --version
          cargo --version
          git version
          turboinstall --version

          echo TARGET="${{ matrix.job.target }}"                    | tee -a $GITHUB_OUTPUT
          echo ARCH="$(cut -d- -f1 <<< "${{ matrix.job.target }}")" | tee -a $GITHUB_OUTPUT
          echo PROFILE="${{ matrix.job.profile }}"                  | tee -a $GITHUB_OUTPUT
          echo VERSION="$(./scripts/version.sh)"                    | tee -a $GITHUB_OUTPUT
          echo EXTRA="$(./scripts/build_info.sh)"                   | tee -a $GITHUB_OUTPUT

      - name: Build
        run: make build

      - name: Create tarball
        id: tarpkg
        run: |
          export TARBALL="zeus-bin-${{ steps.info.outputs.VERSION }}-${{ steps.info.outputs.ARCH }}.tar.gz"
          make TARBALL="${{ env.WORK_DIR }}/artifacts/$TARBALL" tar-pkg
          echo NAME="$TARBALL" >> $GITHUB_OUTPUT

      - name: Create arch package
        id: archpkg
        run: |
          sudo -u builder -s << EOF
            git config --global --add safe.directory "$GITHUB_WORKSPACE"
            make MAKEPKG_WORKDIR="${{ env.WORK_DIR }}" PKGDEST="${{ env.WORK_DIR }}/artifacts" arch-pkg
          EOF

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zeus-${{ matrix.job.profile }}-${{ matrix.job.target }}
          if-no-files-found: error
          path: |
            ${{ env.WORK_DIR }}/artifacts/*

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            ${{ env.WORK_DIR }}/artifacts/*
