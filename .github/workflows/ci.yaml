name: CI

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      release:
        type: boolean
        default: false
        description: "Force create release"
        required: false

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Check & Test
    runs-on: ubuntu-latest
    container: docker.io/archlinux:base-devel
    steps:
      - name: Install dependencies
        run: |
          pacman --needed --noconfirm -Syy archlinux-keyring
          pacman --needed --noconfirm -Syu git

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git config --system --add safe.directory "$GITHUB_WORKSPACE"

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt, clippy

      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

  build:
    needs: ["test"]

    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, profile: release }

    name: Build ${{ matrix.job.profile }} for ${{ matrix.job.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup build environment
        id: setup
        run: |
          set -eu

          build_dir="$GITHUB_WORKSPACE"/build
          mkdir -p -- "$build_dir"
          chmod -v 777 -- "$build_dir"

          echo "target_dir=$build_dir" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Build CI docker image
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true
          file: docker/Dockerfile
          tags: zeus-ci:latest

      - name: List Docker images
        run: |
          set -eu
          docker image ls --all

      - name: Run CI docker image
        uses: addnab/docker-run-action@v3
        with:
          image: zeus-ci:latest
          options: -v ${{ steps.setup.outputs.target_dir }}:/app/target

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zeus-${{ matrix.job.profile }}-${{ matrix.job.target }}
          if-no-files-found: error
          path: |
            ${{ steps.setup.outputs.target_dir }}/package/zeus-bin-*

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v') || inputs.release
        with:
          draft: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            ${{ steps.setup.outputs.target_dir }}/package/zeus-bin-*
