name: CI

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      release:
        type: boolean
        default: false
        description: "Force create release"
        required: false

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Check & Test
    container: docker.io/archlinux:base-devel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt, clippy

      - name: Check
        run: make check

      - name: Run tests
        run: make test

  build:
    needs: ["test"]

    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, profile: release }

    name: Build ${{ matrix.job.profile }} for ${{ matrix.job.target }}
    container: docker.io/archlinux:base-devel
    runs-on: ubuntu-latest

    env:
      O: /build
      PROFILE: ${{ matrix.job.profile }}

    steps:
      - name: Setup build env
        id: setup
        run: |
          set -e

          pacman --needed --noconfirm -Sy base-devel sudo fakeroot git
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          useradd -m -d "$O" builder
          echo 'builder ALL=(ALL:ALL) NOPASSWD: /usr/bin/pacman' > /etc/sudoers.d/builder

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            !~/.cargo/credentials
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal

      - name: Install dependencies
        run: |
          cargo install --locked turboinstall
          cp "$(command -v turboinstall)" /usr/local/bin

      - name: Build info
        id: info
        run: |
          set -e

          rustc --version
          cargo --version
          git version
          turboinstall --version

      - name: Build
        run: |
          unset O
          make build
          sudo -u builder -- git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Create tarball
        id: tarpkg
        run: |
          sudo -u builder -- make O="$O" tarpkg

      - name: Create arch package
        id: archpkg
        run: |
          sudo -u builder -- make O="$O" archpkg

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zeus-${{ matrix.job.profile }}-${{ matrix.job.target }}
          if-no-files-found: error
          path: |
            ${{ env.O }}/package/zeus-bin-*

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v') || inputs.release
        with:
          draft: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            ${{ env.O }}/package/zeus-bin-*
